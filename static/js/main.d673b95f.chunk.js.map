{"version":3,"sources":["images/cloudy.svg","images/day.svg","images/rainy-6.svg","images/rainy-5.svg","images/thunder.svg","images/snowy-6.svg","components/Form.js","components/CurrentWeather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","formControl","margin","minWidth","height","justifyContent","Form","props","classes","city","state","submitForm","handleState","handleCity","StyledForm","onSubmit","FormControl","variant","className","TextField","value","onChange","style","color","id","label","background","InputLabel","htmlFor","Select","native","inputProps","name","aria-label","Button","type","styled","form","CurrentWeather","useState","tempType","setTempType","showForecast","setShowForecast","data","isLoading","getForecast","weatherForecast","main","weather","description","icon","temp","temp_max","temp_min","toggleTempType","prevState","convertCelcius","toFixed","convertFahr","getTheForecast","getWeatherIcon","day","cloudy","rainy6","rainy5","thunder","snowy","MainContainer","Toggle","onClick","ForecastContainer","filter","dt_txt","includes","map","item","moment","format","src","alt","marginBottom","cursor","CurrentWeatherContainer","Grid","div","App","setState","setCity","setIsLoading","isSearched","setIsSearched","setWeatherForecast","currentWeatherData","setCurrentWeatherData","getCurrentWeather","url","process","console","log","fetch","headers","then","res","json","catch","err","WeatherContainer","e","preventDefault","target","Loader","CircularProgress","list","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d673b95f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloudy.ad789581.svg\";","module.exports = __webpack_public_path__ + \"static/media/day.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-6.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-5.2bd23641.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-6.67d63a14.svg\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: \"0.5rem\",\r\n      minWidth: 100,\r\n      height: \"50px\",\r\n      justifyContent: \"center\",\r\n    }\r\n  }));\r\n\r\nconst Form = (props) => {\r\n    const classes = useStyles();\r\n    const { city, state, submitForm, handleState, handleCity } = props;\r\n    return (\r\n        <StyledForm onSubmit={submitForm}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <TextField \r\n                    value={city}\r\n                    onChange={handleCity}\r\n                    style={{color: \"rgba(244, 243, 238, 1)\"}}\r\n                    id=\"outlined-basic\" \r\n                    label=\"City\" \r\n                    style={{background: \"rgba(244, 243, 238, 0.5)\"}}\r\n                    variant=\"outlined\" />\r\n            </FormControl>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel htmlFor=\"outlined-age-native-simple\">State</InputLabel>\r\n                <Select\r\n                native\r\n                value={state}\r\n                onChange={handleState}\r\n                label=\"State\"\r\n                inputProps={{\r\n                    name: 'state',\r\n                    id: 'outlined-age-native-simple',\r\n                }}\r\n                >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                <option value=\"AL\">Alabama</option>\r\n                <option value=\"AK\">Alaska</option>\r\n                <option value=\"AZ\">Arizona</option>\r\n                <option value=\"AR\">Arkansas</option>\r\n                <option value=\"CA\">California</option>\r\n                <option value=\"CO\">Colorado</option>\r\n                <option value=\"CT\">Connecticut</option>\r\n                <option value=\"DE\">Delaware</option>\r\n                <option value=\"DC\">District Of Columbia</option>\r\n                <option value=\"FL\">Florida</option>\r\n                <option value=\"GA\">Georgia</option>\r\n                <option value=\"HI\">Hawaii</option>\r\n                <option value=\"ID\">Idaho</option>\r\n                <option value=\"IL\">Illinois</option>\r\n                <option value=\"IN\">Indiana</option>\r\n                <option value=\"IA\">Iowa</option>\r\n                <option value=\"KS\">Kansas</option>\r\n                <option value=\"KY\">Kentucky</option>\r\n                <option value=\"LA\">Louisiana</option>\r\n                <option value=\"ME\">Maine</option>\r\n                <option value=\"MD\">Maryland</option>\r\n                <option value=\"MA\">Massachusetts</option>\r\n                <option value=\"MI\">Michigan</option>\r\n                <option value=\"MN\">Minnesota</option>\r\n                <option value=\"MS\">Mississippi</option>\r\n                <option value=\"MO\">Missouri</option>\r\n                <option value=\"MT\">Montana</option>\r\n                <option value=\"NE\">Nebraska</option>\r\n                <option value=\"NV\">Nevada</option>\r\n                <option value=\"NH\">New Hampshire</option>\r\n                <option value=\"NJ\">New Jersey</option>\r\n                <option value=\"NM\">New Mexico</option>\r\n                <option value=\"NY\">New York</option>\r\n                <option value=\"NC\">North Carolina</option>\r\n                <option value=\"ND\">North Dakota</option>\r\n                <option value=\"OH\">Ohio</option>\r\n                <option value=\"OK\">Oklahoma</option>\r\n                <option value=\"OR\">Oregon</option>\r\n                <option value=\"PA\">Pennsylvania</option>\r\n                <option value=\"RI\">Rhode Island</option>\r\n                <option value=\"SC\">South Carolina</option>\r\n                <option value=\"SD\">South Dakota</option>\r\n                <option value=\"TN\">Tennessee</option>\r\n                <option value=\"TX\">Texas</option>\r\n                <option value=\"UT\">Utah</option>\r\n                <option value=\"VT\">Vermont</option>\r\n                <option value=\"VA\">Virginia</option>\r\n                <option value=\"WA\">Washington</option>\r\n                <option value=\"WV\">West Virginia</option>\r\n                <option value=\"WI\">Wisconsin</option>\r\n                <option value=\"WY\">Wyoming</option>\r\n                </Select>\r\n            </FormControl> \r\n            <FormControl variant=\"outlined\" className={classes.formControl}> \r\n                <Button \r\n                    type=\"submit\"\r\n                    variant=\"outlined\" \r\n                    color=\"primary\">\r\n                    Search\r\n                </Button>\r\n            </FormControl>\r\n        </StyledForm>\r\n    )\r\n}\r\n\r\nexport default Form\r\n\r\nconst StyledForm = styled.form`\r\n    margin: 0 auto;\r\n    padding: 1rem 0rem;\r\n    width: 100%;\r\n    border-radius: 10px 10px 0px 0px;\r\n    box-shadow: 0px 0px 3px rgba(0,0,0,0.1);\r\n    background-color: rgba(244, 243, 238, 0.9);\r\n`;","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport day from '../images/day.svg';\r\nimport cloudy from '../images/cloudy.svg';\r\nimport rainy6 from '../images/rainy-6.svg';\r\nimport rainy5 from '../images/rainy-5.svg';\r\nimport thunder from '../images/thunder.svg';\r\nimport snowy from '../images/snowy-6.svg';\r\n\r\n\r\n\r\nconst CurrentWeather = (props) => {\r\n    const [tempType, setTempType] = useState('F')\r\n    const [showForecast, setShowForecast] = useState(false)\r\n    const { data, isLoading, city, state, getForecast, weatherForecast } = props;\r\n    const { main, weather, name } = data;\r\n    const { description, icon} = weather[0];\r\n    const { temp, temp_max, temp_min} = main;\r\n    \r\n    const toggleTempType = () => {\r\n        setTempType(prevState => (prevState === 'F' ? 'C' : 'F'))\r\n    }\r\n\r\n    const convertCelcius = (temp) => {\r\n        return (temp - 273.15).toFixed(0);\r\n    }\r\n\r\n    const convertFahr = (temp) => {\r\n        return (temp * (9/5) - 459.67).toFixed(0);\r\n    }\r\n\r\n    const getTheForecast = () => {\r\n        if (showForecast) {\r\n            setShowForecast(false)\r\n        } else {\r\n            getForecast();\r\n            setShowForecast(true)\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    const getWeatherIcon = (icon) => {\r\n        switch(icon) {\r\n            case \"01d\": \r\n            case \"01n\":\r\n              return day\r\n              break;\r\n            case \"02d\":\r\n            case \"02n\":\r\n            case \"03d\":\r\n            case \"03n\":\r\n            case \"04d\":\r\n            case \"04n\":\r\n              return cloudy\r\n              break;\r\n            case \"09d\":\r\n            case \"09n\":\r\n              return rainy6\r\n              break;\r\n            case \"10d\":\r\n            case \"10n\":\r\n              return rainy5\r\n              break;\r\n            case \"11d\":\r\n            case \"11n\":\r\n              return thunder\r\n              break;\r\n            case \"13d\":\r\n            case \"13n\":\r\n              return snowy\r\n              break;\r\n            default:\r\n                return cloudy\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { showForecast ? \r\n            <MainContainer>\r\n                {isLoading ? null : <Toggle><p className={tempType === \"C\" ? \"selected\" : \"\"} onClick={toggleTempType}>C°</p><p>/</p><p className={tempType === \"F\" ? \"selected\" : \"\"} onClick={toggleTempType}>F°</p></Toggle>}\r\n                {isLoading ? null : <h2>Weather Forecast for {name}</h2> }\r\n                <ForecastContainer>\r\n                    {weatherForecast.filter(day => day.dt_txt.includes(\"12:00:00\")).map(item => {\r\n                        const { main, weather, dt_txt } = item;\r\n                        const { description, icon } = weather[0];\r\n                        const { temp, temp_max, temp_min } = main;\r\n                        return (\r\n                            <div className=\"item\">\r\n                                <h3>{moment(dt_txt).format('dddd')}</h3>\r\n                                <img src={getWeatherIcon(icon)} alt={description}/>\r\n                                <p className=\"description\">{description}</p>\r\n                                <p>Temp: {tempType === \"F\" ? convertFahr(temp) : convertCelcius(temp)}°{tempType}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </ForecastContainer>\r\n                <p className=\"small\">View Current Weather Conditions</p>\r\n                <KeyboardArrowDownIcon style={{marginBottom: \"0.5rem\", cursor: \"pointer\"}} onClick={getTheForecast}/>\r\n            </MainContainer>\r\n            :\r\n            <CurrentWeatherContainer>\r\n                <Toggle><p className={tempType === \"C\" ? \"selected\" : \"\"} onClick={toggleTempType}>C°</p><p>/</p><p className={tempType === \"F\" ? \"selected\" : \"\"} onClick={toggleTempType}>F°</p></Toggle>\r\n                <h2>Current Weather in {name}</h2>\r\n                <Grid>\r\n                    <img src={getWeatherIcon(icon)} alt={description}/>\r\n                    <div className=\"details\">\r\n                        <p className=\"description\">{description}</p>\r\n                        <p>Current Temp: {tempType === \"F\" ? convertFahr(temp) : convertCelcius(temp)}°{tempType}</p>\r\n                        <p>Max: {tempType === \"F\" ? convertFahr(temp_max) : convertCelcius(temp_max)}°{tempType}</p>\r\n                        <p>Min: {tempType === \"F\" ? convertFahr(temp_min) : convertCelcius(temp_min)}°{tempType}</p>\r\n                    </div>\r\n                </Grid>\r\n                <p className=\"small\">View Five Day Forecast</p>\r\n                <KeyboardArrowDownIcon style={{marginBottom: \"0.5rem\", cursor: \"pointer\"}} onClick={getTheForecast}/>\r\n            </CurrentWeatherContainer>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentWeather\r\n\r\nconst CurrentWeatherContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    img {\r\n        margin: 0 auto;\r\n        height: 250px;\r\n        padding: 0;\r\n    }\r\n    h2 {\r\n        margin: 0;\r\n        font-size: 1.8rem;\r\n        font-weight: 300;\r\n    }\r\n    .small {\r\n        font-size: 0.8rem;\r\n        color: #fff;\r\n        margin: 0;\r\n        padding:0;\r\n    }\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 0.25rem;\r\n    justify-content: center;\r\n    align-items: center;\r\n    max-height: 200px;\r\n    .details {\r\n        align-self: flex-start;\r\n        margin: 2rem 0rem;\r\n    }\r\n    p {\r\n        text-align: left;\r\n        margin: 0.5rem 1rem;\r\n    }\r\n    .description {\r\n        text-transform: uppercase;\r\n        font-size: 1.1rem;\r\n        font-weight: 300;\r\n    }\r\n    .small {\r\n        font-size: 0.8rem;\r\n        color: #fff;\r\n        margin: 0;\r\n        padding:0;\r\n    }\r\n`;\r\n\r\nconst Toggle = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 1rem;\r\n    display: flex;\r\n    cursor: pointer;\r\n    p {\r\n        color: lightgray;\r\n        font-size: 1.1rem;\r\n        padding: 0rem 0.25rem;\r\n        margin: 0;\r\n    }\r\n    .selected {\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst ForecastContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #fff;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    grid-gap: 0.5rem;\r\n    padding: 1rem;\r\n    max-width: 750px;\r\n    margin: 0 auto;\r\n    img {\r\n        height: 100px;\r\n    }\r\n    .item {\r\n        border-radius: 10px;\r\n        box-shadow: 0px 0px 5px rgba(0,0,0,0.4);\r\n    }\r\n    h3 {\r\n        font-size: 1.6rem;\r\n        padding: 0;\r\n        margin: 0.5rem;\r\n        font-weight: 300;\r\n    }\r\n`;\r\n\r\nconst MainContainer = styled.div`\r\n    text-align: center;\r\n    color: #fff;\r\n    position: relative;\r\n\r\n    h2 {\r\n        color: #fff;\r\n        margin: 0;\r\n        font-size: 1.8rem;\r\n        font-weight: 300;\r\n    }\r\n    .description {\r\n        text-transform: uppercase;\r\n        font-size: 0.9rem;\r\n        font-weight: 300;\r\n    }\r\n    .small {\r\n        font-size: 0.8rem;\r\n        color: lightgray;\r\n        margin: 0;\r\n        padding:0;\r\n    }\r\n`;","import React, { useState } from 'react';\nimport Form from './components/Form'\nimport CurrentWeather from './components/CurrentWeather'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport styled from 'styled-components'\nimport './App.css';\n\nfunction App() {\n  const [state, setState] = useState('');\n  const [city, setCity] = useState('');\n  const [isLoading, setIsLoading] = useState(false)\n  const [isSearched, setIsSearched] = useState(false)\n  const [weatherForecast, setWeatherForecast] = useState([])\n  const [currentWeatherData, setCurrentWeatherData] = useState({});\n\n  const handleCity = (e) => {\n    setCity(e.target.value)\n  }\n\n  const handleState = (e) => {\n    setState(e.target.value)\n  }\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    setIsSearched(false)\n    setIsLoading(true);\n    console.log(city, state)\n    getCurrentWeather();\n  }\n\n  const getCurrentWeather = () => {\n    setIsLoading(true);\n    const url = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/weather?q=${city},${state},usa&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n    console.log(url)\n    fetch(url,\n      {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      setCurrentWeatherData(data)\n      setIsLoading(false)\n      setIsSearched(true)\n    })\n    .catch(err => console.log(err))\n  }\n\n  const getForecast = () => {\n    setIsLoading(true);\n    const url = `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/forecast?q=${city},${state},usa&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n    console.log(url)\n    fetch(url,\n      {\n        headers : { \n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n         }\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n      setWeatherForecast(data.list)\n      setIsLoading(false)\n      setIsSearched(true)\n    })\n    .catch(err => console.log(err))\n  }\n\n  return (\n    <MainContainer>\n      <h1>Check the Weather Near You</h1>\n      <WeatherContainer>\n        <Form\n          city={city}\n          state={state}\n          submitForm={submitForm}\n          handleState={handleState}\n          handleCity={handleCity} />\n        <hr/>\n        {isLoading ? <Loader><CircularProgress color=\"primary\"/></Loader> : null}\n        { isSearched ? \n        <CurrentWeather \n          city={city}\n          state={state}\n          isLoading={isLoading}\n          data={currentWeatherData}\n          getForecast={getForecast}\n          weatherForecast={weatherForecast}\n        />\n        : null\n        }\n      </WeatherContainer>\n      <small>Background SVG image from <a href=\"https://www.svgbackgrounds.com/\">SVGBackgrounds.com</a></small>\n    </MainContainer>\n  );\n}\n\nexport default App;\n\nconst WeatherContainer = styled.div`\n  width: 90%;\n  max-width: 800px;\n  border: solid 1px black;\n  border-radius: 10px;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  background-color: rgba(244, 243, 238, 0.1);\n  box-shadow: 0px 0px 20px rgba(0,0,0,0.3);\n\n`;\n\nconst MainContainer = styled.div`\n  text-align: center;\n  background-color: #ffffff;\n  margin: 0;\n  padding: 2rem;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #00a8e8;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpolygon fill='%2300a0db' points='1600 160 0 460 0 350 1600 50'/%3E%3Cpolygon fill='%230097ce' points='1600 260 0 560 0 450 1600 150'/%3E%3Cpolygon fill='%23008fc1' points='1600 360 0 660 0 550 1600 250'/%3E%3Cpolygon fill='%230086b4' points='1600 460 0 760 0 650 1600 350'/%3E%3Cpolygon fill='%23007ea7' points='1600 800 0 800 0 750 1600 450'/%3E%3C/g%3E%3C/svg%3E\");\n  background-attachment: fixed;\n  background-size: cover;\n  color: #f4f3ee;\n  small {\n    position: fixed;\n    bottom: 0;\n    color: lightgray;\n    width: 100%;\n    bottom: 5px; left: 50%;\n    margin-left: -50%; /* (width + padding)/2 */\n  }\n  a {\n    color: lightgray;\n  }\n  h1 {\n    font-size: 2.5rem;\n    font-weight: 300;\n  }\n`;\n\nconst Loader = styled.div`\n  width: 100%;\n  text-align: center;\n  margin: 2rem 0rem;\n  color: #fff;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}